---
import Layout from '../layouts/Layout.astro';
// import MemberCard from '../components/MemberCard.astro';
import {SITE_TITLE } from '../consts';

const ctfLogos = [
  { name: "ENOWARS 9 - 2025", 
    img_url: "https://ctftime.org/media/cache/04/2e/042e05ae002396dff908a7474c408ab1.png", 
    platform_link:  "https://ctftime.org/event/2796"},
  { name: "CyberChallenge.it Nationals", 
    img_url: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTrOiiSt0riNNROJCDmj_9TWL4lDXh04-JHOA&s", 
    platform_link:  "https://cyberchallenge.it/attack-defense/2025"},
  { name: "CornCTF 2025", 
    img_url: "https://ctftime.org/media/events/cornctf.png",
    platform_link: "https://ctftime.org/event/2762"},
  { name: "LeakCTF 2025", 
    img_url: "https://ctftime.org/media/events/L3akCTF_2025_Logo_750x750.png",
    platform_link: "https://ctftime.org/event/2629"},
  { name: "HackTheBox", img_url: "https://yt3.googleusercontent.com/2Tq9apgiHSV7NrCKzgRMbm-AABWJJXuyWMY_7MpQlVdvemqJRWcGegVq0G4e9xHCl8HcbQs_Ag=s900-c-k-c0x00ffffff-no-rj" },
  { name: "TryHackMe: Industrial Intrusion", img_url: "https://appl3tree.github.io/assets/img/infocards/thm-industrial-ctf.png" },
];

// Duplica i loghi per il carosello infinito
const carouselLogos = [...ctfLogos, ...ctfLogos];
---

<Layout title={SITE_TITLE}>
  <div class="hero-fullscreen">
    <div class="container">
      <img src="/logo0.png" alt="CTF Team Logo" class="logo" id="glitch-logo" />
    </div>
  </div>

  <div class="intro-section" id="start-home-page">
    <div class="container">
      <div class="intro">
        <h1>About Us</h1>
        <p>
          Pwnissa [Pwn + <a href="https://it.wikipedia.org/wiki/Panissa_(gastronomia_ligure)"><b><span style="color:#d9ad29">Panissa</span></b></a>] is the official CTF team of the University of Genoa, founded in 2025 following our participation in CyberChallenge.IT. 
          <br>
          We are a group of students passionate about cybersecurity, tackling challenges in pwn, web, crypto, reversing, network, horse racing, and much more.
        </p>
        <p>  
          Our goal is to learn while having fun, by taking part in both national and international CTFs. 
          When a challenge really grabs our attention, we dive deeper by writing detailed writeups and developing custom tools for attack and defense CTFs, which we share publicly.
        </p>
        <p>
          Our mascot, <b>Pwny</b>, is not only the most skilled hacker in the team ‚Äî she also helped us win the Best Mascot Award at CyberChallenge.IT 2025. üê¥üíª
        </p>
        
        <div class="location">
          <span>üè´ Universit√† degli Studi di Genova, DIBRIS</span>
          <span>üìç Via Dodecaneso, Genova, Italy</span>
        </div>
        
        <a href="/blog" class="cta-button">Visit our blog</a>
      </div>
    </div>
  </div>

  <div class="team-section">
    <div class="container">
      <h2>üßë‚Äçüíª Our members</h2>
      <div class="intro">
        <p>We are mostly bachelor's and master's students studying Computer Science and Computer Engineering at the University of Genoa.</p>
      </div>
      <div class="team-note">
        <a href="/members" class="cta-button">See all our members</a>
      </div>
    </div>
  </div>

  <div class="ctf-carousel">
    <div class="container">
      <h2>üèÖ CTFs we played</h2>
      <div class="carousel-container">
        <div class="carousel-track">
          {carouselLogos.map((logo, index) => (
            <a href={logo.platform_link} target="_blank" rel="noopener noreferrer">
            <img 
              key={index}
              src={logo.img_url} 
              alt={logo.name} 
              class="ctf-logo"
              title={logo.name}
            />
          </a>
          ))}
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const glitchLogo = document.getElementById('glitch-logo');
  const images = ['/logo0.png', '/logo1.png'];
  let currentImageIndex = 0;

  function toggleGlitch() {
    // Randomly decide which image to show next
    currentImageIndex = 1 - currentImageIndex; // Swaps between 0 and 1
    glitchLogo.src = images[currentImageIndex];

    // Schedule the next toggle at a random interval between 0 and 500ms
    const interval = Math.random() * 500; // Random time between 0 and 500 milliseconds
    setTimeout(toggleGlitch, interval);
  }

  // Start the glitch effect after a short delay when the page loads
  window.addEventListener('load', () => {
    setTimeout(toggleGlitch, 100); // Initial delay to ensure page is ready
  });
</script>
